{"ast":null,"code":"//Payout constatns\nconst Utils = require('../utils');\nconst constants = require('constants');\nvar fs = require(\"fs\");\nvar crypto = require(\"crypto\");\nlet MPAEndpoint = \"payout-gamma.cashfree.com\";\nlet BearerToken = '';\nlet Expiry = '';\nlet ClientID = '';\nlet ClientSecret = '';\nlet PublicKey = '';\nlet initialize = function (env) {\n  if (env == \"PRODUCTION\") this.MPAEndpoint = \"payout-api.cashfree.com\";\n};\nlet setClientId = function (v) {\n  this.ClientID = v;\n};\nlet setClientSecret = function (v) {\n  this.ClientSecret = v;\n};\nlet setPublicKey = function (key, path) {\n  if (path) {\n    this.PublicKey = fs.readFileSync(path, 'utf8');\n  } else {\n    this.PublicKey = key;\n  }\n};\nlet generateCertificate = function () {\n  if (!this.PublicKey) {\n    return null;\n  }\n  var curTimeStamp = Date.now() / 1000;\n  var message = this.ClientID + \".\" + curTimeStamp.toString();\n  let buffer = new Buffer(message);\n  let encrypted = crypto.publicEncrypt({\n    key: this.PublicKey,\n    padding: constants.RSA_PKCS1_OAEP_PADDING\n  }, buffer);\n  return encrypted.toString(\"base64\");\n};\nlet authorize = async function () {\n  var path = \"/payout/v1/authorize\";\n  var data = {};\n  var obj = {};\n  try {\n    var certificate = this.generateCertificate();\n  } catch (error) {\n    throw {\n      \"status\": \"ERROR\",\n      \"message\": \"Couldn't generate certificate\"\n    };\n  }\n  obj.headers = {\n    \"Content-Type\": 'application/json',\n    \"X-Client-Id\": this.ClientID,\n    \"X-Client-Secret\": this.ClientSecret\n  };\n  if (this.PublicKey) {\n    obj.headers[\"X-Cf-Signature\"] = certificate;\n  }\n  obj.path = path;\n  obj.hostname = this.MPAEndpoint;\n  obj.data = data;\n  try {\n    var response = await Utils.doPost(obj);\n  } catch (error) {\n    throw error;\n  }\n  if (response.status == \"ERROR\") {\n    throw response;\n  }\n  this.BearerToken = response.data.token;\n  this.Expiry = parseInt(response.data.expiry);\n  return response;\n};\nlet checkToken = async function () {\n  var timeBuffer = 300;\n  var response = true;\n  if (this.BearerToken == \"\" || this.Expiry == \"\" || this.Expiry - timeBuffer < Date.now() / 1000) {\n    try {\n      response = await this.authorize();\n    } catch (error) {\n      throw error;\n    }\n  }\n  if (response.status === \"ERROR\") {\n    throw response;\n  }\n  return response;\n};\nmodule.exports = {\n  MPAEndpoint,\n  initialize,\n  BearerToken,\n  Expiry,\n  setClientId,\n  ClientID,\n  ClientSecret,\n  checkToken,\n  setClientSecret,\n  authorize,\n  PublicKey,\n  setPublicKey,\n  generateCertificate\n};","map":{"version":3,"names":["Utils","require","constants","fs","crypto","MPAEndpoint","BearerToken","Expiry","ClientID","ClientSecret","PublicKey","initialize","env","setClientId","v","setClientSecret","setPublicKey","key","path","readFileSync","generateCertificate","curTimeStamp","Date","now","message","toString","buffer","Buffer","encrypted","publicEncrypt","padding","RSA_PKCS1_OAEP_PADDING","authorize","data","obj","certificate","error","headers","hostname","response","doPost","status","token","parseInt","expiry","checkToken","timeBuffer","module","exports"],"sources":["C:/GitHub/gaminghub/node_modules/cashfree-sdk/Payouts/constants.js"],"sourcesContent":["//Payout constatns\nconst Utils = require('../utils');\nconst constants = require('constants');\nvar fs = require(\"fs\")\nvar crypto = require(\"crypto\")\n\nlet MPAEndpoint = \"payout-gamma.cashfree.com\";\nlet BearerToken = '';\nlet Expiry = '';\nlet ClientID = '';\nlet ClientSecret = '';\nlet PublicKey = '';\n\nlet initialize = function(env){\n    if(env == \"PRODUCTION\") this.MPAEndpoint = \"payout-api.cashfree.com\";\n}\n\nlet setClientId = function(v){\n\tthis.ClientID = v;\n}\n\nlet setClientSecret = function(v){\n\tthis.ClientSecret = v;\n}\n\nlet setPublicKey = function(key, path) {\n\tif (path) {\n\t\tthis.PublicKey = fs.readFileSync(path,'utf8')\n\t} else {\n\t\tthis.PublicKey = key;\n\t}\n} \n\nlet generateCertificate = function() {\n\tif (!this.PublicKey) {\n\t\treturn null;\n\t}\n    var curTimeStamp = Date.now()/1000;\n    var message = this.ClientID + \".\" + curTimeStamp.toString();\n    let buffer = new Buffer(message);\n    let encrypted = crypto.publicEncrypt({\n        key: this.PublicKey,\n        padding: constants.RSA_PKCS1_OAEP_PADDING\n    }, buffer);\n    return encrypted.toString(\"base64\");\n}\n\nlet authorize =  async function(){\n\tvar path = \"/payout/v1/authorize\";\n\tvar data = {};\n\tvar obj = {};\n\n\ttry {\n\t\tvar certificate = this.generateCertificate();\n\n\t} catch(error) {\n\t\tthrow {\n\t\t\t\"status\": \"ERROR\", \n\t\t\t\"message\": \"Couldn't generate certificate\"\n\t\t}\n\t}\n\tobj.headers = {\n        \"Content-Type\": 'application/json',\n        \"X-Client-Id\": this.ClientID,\n        \"X-Client-Secret\": this.ClientSecret\n\t};\n\tif (this.PublicKey) {\n\t\tobj.headers[\"X-Cf-Signature\"] = certificate;\n\t}\n\n\tobj.path = path;\n\tobj.hostname = this.MPAEndpoint;\n\tobj.data = data;\n\ttry {\n\t\tvar response = await Utils.doPost(obj);\n\t} catch(error) {\n\t\tthrow error;\n\t}\n\tif(response.status == \"ERROR\"){\n\t\tthrow response;\n\t}\n\tthis.BearerToken = response.data.token;\n\tthis.Expiry = parseInt(response.data.expiry);\n\treturn response\n}\n\nlet checkToken = async function(){\n\tvar timeBuffer = 300;\n\tvar response = true;\n\tif(this.BearerToken == \"\" || this.Expiry == \"\" || (this.Expiry-timeBuffer) < Date.now()/1000){\n\t\ttry {\n\t\t\tresponse = await this.authorize();\n\t\t} catch(error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\tif (response.status === \"ERROR\") {\n\t\tthrow response;\n\t}\n\treturn response;\n}\n\nmodule.exports = {MPAEndpoint, initialize, BearerToken, Expiry, setClientId, ClientID, ClientSecret, checkToken, setClientSecret, authorize, PublicKey, setPublicKey, generateCertificate};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}