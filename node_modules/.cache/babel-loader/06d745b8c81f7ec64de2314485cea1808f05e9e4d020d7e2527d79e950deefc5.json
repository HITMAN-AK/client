{"ast":null,"code":"var https = require(\"https\");\nlet checkKeysInObject = function (req, keys) {\n  if (req === undefined || typeof req !== 'object' || req === null) return {\n    \"status\": \"ERROR\",\n    \"subCode\": \"412\",\n    \"message\": \"Post data is empty or not a valid JSON\"\n  };\n  var notPresent = [];\n  for (var i = 0; i < keys.length; i++) {\n    if (!req.hasOwnProperty(keys[i])) notPresent.push(keys[i]);\n  }\n  if (notPresent.length == 0) return true;else return {\n    \"status\": \"ERROR\",\n    \"subCode\": \"412\",\n    \"message\": notPresent.join(\",\") + \" missing in your request\"\n  };\n};\nlet doPost = function (obj) {\n  const options = {\n    hostname: obj.hostname,\n    port: 443,\n    path: obj.path,\n    method: 'POST',\n    headers: obj.headers\n  };\n  var response = '';\n  var token = null;\n  return new Promise((resolve, reject) => {\n    const req = https.request(options, res => {\n      // console.log(`statusCode: ${res.statusCode}`)\n      res.on('data', d => {\n        response += d;\n      });\n      res.on('end', d => {\n        resolve(JSON.parse(response));\n      });\n    });\n    req.on('error', error => {\n      reject(error);\n    });\n    req.write(JSON.stringify(obj.data));\n    req.end();\n  });\n};\nlet doGet = function (obj) {\n  const options = {\n    hostname: obj.hostname,\n    port: 443,\n    path: obj.path,\n    method: 'GET',\n    headers: obj.headers\n  };\n  var response = '';\n  var token = null;\n  return new Promise((resolve, reject) => {\n    const req = https.request(options, res => {\n      // console.log(`statusCode: ${res.statusCode}`)\n      res.on('data', d => {\n        response += d;\n      });\n      res.on('end', d => {\n        resolve(JSON.parse(response));\n      });\n    });\n    req.on('error', error => {\n      reject(error);\n    });\n    req.end();\n  });\n};\nlet VerifyToken = function () {\n  var path = \"/payout/v1/verifyToken\";\n  var token = PayoutConstants.BearerToken;\n  var data = {};\n  var obj = {};\n  obj.headers = {\n    \"Content-Type\": 'application/json',\n    \"Authorization\": \"Bearer \" + token\n  };\n  obj.path = path;\n  obj.hostname = \"payout-gamma.cashfree.com\";\n  obj.data = data;\n  doPost(obj);\n};\nmodule.exports = {\n  checkKeysInObject,\n  doPost,\n  VerifyToken,\n  doGet\n};","map":{"version":3,"names":["https","require","checkKeysInObject","req","keys","undefined","notPresent","i","length","hasOwnProperty","push","join","doPost","obj","options","hostname","port","path","method","headers","response","token","Promise","resolve","reject","request","res","on","d","JSON","parse","error","write","stringify","data","end","doGet","VerifyToken","PayoutConstants","BearerToken","module","exports"],"sources":["C:/GitHub/gaminghub/node_modules/cashfree-sdk/utils.js"],"sourcesContent":[" \nvar https = require(\"https\")\n\n\nlet checkKeysInObject = function(req, keys) {\n    if (req === undefined || typeof req !== 'object' || req === null) return {\n        \"status\": \"ERROR\",\n        \"subCode\": \"412\",\n        \"message\": \"Post data is empty or not a valid JSON\"\n    };\n    var notPresent = [];\n    for (var i = 0; i < keys.length; i++) {\n        if (!req.hasOwnProperty(keys[i])) notPresent.push(keys[i]);\n    }\n    if (notPresent.length == 0) return true;\n    else return {\n        \"status\": \"ERROR\",\n        \"subCode\": \"412\",\n        \"message\": notPresent.join(\",\") + \" missing in your request\"\n    }\n}\n\nlet doPost = function(obj) {\n    const options = {\n        hostname: obj.hostname,\n        port: 443,\n        path: obj.path,\n        method: 'POST',\n        headers: obj.headers\n    }\n    var response = '';\n    var token = null\n\n    return new Promise((resolve, reject) => {\n        const req = https.request(options, (res) => {\n            // console.log(`statusCode: ${res.statusCode}`)\n            res.on('data', (d) => {\n                response += d;\n            })\n            res.on('end', (d) => {\n                resolve(JSON.parse(response));\n            })\n        })\n\n        req.on('error', (error) => {\n            reject(error)\n        })\n        req.write(JSON.stringify(obj.data))\n        req.end()\n    })\n}\n\nlet doGet = function(obj){\n    const options = {\n        hostname: obj.hostname,\n        port: 443,\n        path: obj.path,\n        method: 'GET',\n        headers: obj.headers\n    }\n    var response = '';\n    var token = null\n\n    return new Promise((resolve, reject) => {\n        const req = https.request(options, (res) => {\n            // console.log(`statusCode: ${res.statusCode}`)\n            res.on('data', (d) => {\n                response += d;\n            })\n            res.on('end', (d) => {\n                resolve(JSON.parse(response));\n            })\n        })\n\n        req.on('error', (error) => {\n            reject(error)\n        })\n        req.end()\n    })\n}\n\nlet VerifyToken = function() {\n    var path = \"/payout/v1/verifyToken\";\n    var token = PayoutConstants.BearerToken;\n    var data = {}\n    var obj = {}\n    obj.headers = {\n        \"Content-Type\": 'application/json',\n        \"Authorization\": \"Bearer \"+token\n    };\n    obj.path = path;\n    obj.hostname = \"payout-gamma.cashfree.com\";\n    obj.data = data;\n\n    doPost(obj);\n}\n\nmodule.exports = {checkKeysInObject, doPost, VerifyToken, doGet};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}